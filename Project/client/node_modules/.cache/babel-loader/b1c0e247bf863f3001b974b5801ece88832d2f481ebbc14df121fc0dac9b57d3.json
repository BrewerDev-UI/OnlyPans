{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devon\\\\Desktop\\\\MERN\\\\OnlyPans\\\\client\\\\src\\\\components\\\\Pans.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pans = () => {\n  _s();\n  const [subreddit, setSubreddit] = useState([]);\n  useEffect(() => {\n    axios.get(`https://www.reddit.com/r/castiron/top.json`).then(res => {\n      console.log(res.data.data.children);\n      setSubreddit(res.data.data.children);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"text-center onlyHeader\",\n      children: \"Check out these hot pans\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex grid overflow-auto\",\n      children: subreddit.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-break m-4 \",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${post.data.thumbnail}`,\n              height: `${post.data.thumbnail_height}`,\n              width: `${post.data.thumbnail_width}`,\n              alt: \"cast iron pan ppst\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"m-3\",\n              children: post.data.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 33\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n_s(Pans, \"Pj2wU1OL5u2oxQ/AuNQr+XjUy0Q=\");\n_c = Pans;\nexport default Pans;\nvar _c;\n$RefreshReg$(_c, \"Pans\");","map":{"version":3,"names":["React","useState","useEffect","axios","Pans","subreddit","setSubreddit","get","then","res","console","log","data","children","catch","err","map","post","i","thumbnail","thumbnail_height","thumbnail_width","title"],"sources":["C:/Users/Devon/Desktop/MERN/OnlyPans/client/src/components/Pans.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Pans = () => {\r\n    const [subreddit, setSubreddit] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.reddit.com/r/castiron/top.json`)\r\n            .then((res) => {\r\n                console.log(res.data.data.children)\r\n                setSubreddit(res.data.data.children)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h5 className='text-center onlyHeader'>Check out these hot pans</h5>\r\n            {/* <table className='d-flex'>\r\n                <tbody>\r\n                    {\r\n                        subreddit.map((post, i) => {\r\n                            return (\r\n                                <tr className='d-flex' key={i}>\r\n                                    <td><img src={`${post.data.thumbnail}`} height={`${post.data.thumbnail_height}`} width={`${post.data.thumbnail_width}`} alt=\"cast iron pan ppst\" /></td>\r\n                                    <td>{post.data.title}</td>\r\n                                </tr>\r\n                            )\r\n\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </table> */}\r\n            <div className='d-flex grid overflow-auto'>\r\n                {\r\n                    subreddit.map((post, i) => {\r\n                        return (\r\n                            <div className='row' key={i} >\r\n                                <div className='text-break m-4 '>\r\n                                    <img src={`${post.data.thumbnail}`} height={`${post.data.thumbnail_height}`} width={`${post.data.thumbnail_width}`} alt=\"cast iron pan ppst\" />\r\n                                    <p className='m-3'>{post.data.title}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pans"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAA;AAEzB,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACZC,KAAK,CAACI,GAAG,CAAE,4CAA2C,CAAC,CAClDC,IAAI,CAAEC,GAAG,IAAK;MACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC;MACnCP,YAAY,CAACG,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC;IACxC,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAKL,OAAO,CAACC,GAAG,CAACI,GAAG,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI;IAAA,wBACI;MAAI,SAAS,EAAC,wBAAwB;MAAA,UAAC;IAAwB;MAAA;MAAA;MAAA;IAAA,QAAK,eAgBpE;MAAK,SAAS,EAAC,2BAA2B;MAAA,UAElCV,SAAS,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KAAK;QACvB,oBACI;UAAK,SAAS,EAAC,KAAK;UAAA,uBAChB;YAAK,SAAS,EAAC,iBAAiB;YAAA,wBAC5B;cAAK,GAAG,EAAG,GAAED,IAAI,CAACL,IAAI,CAACO,SAAU,EAAE;cAAC,MAAM,EAAG,GAAEF,IAAI,CAACL,IAAI,CAACQ,gBAAiB,EAAE;cAAC,KAAK,EAAG,GAAEH,IAAI,CAACL,IAAI,CAACS,eAAgB,EAAE;cAAC,GAAG,EAAC;YAAoB;cAAA;cAAA;cAAA;YAAA,QAAG,eAC/I;cAAG,SAAS,EAAC,KAAK;cAAA,UAAEJ,IAAI,CAACL,IAAI,CAACU;YAAK;cAAA;cAAA;cAAA;YAAA,QAAK;UAAA;YAAA;YAAA;YAAA;UAAA;QACtC,GAJgBJ,CAAC;UAAA;UAAA;UAAA;QAAA,QAMrB;MAEd,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAEJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAA,GA/CKd,IAAI;AAAA,KAAJA,IAAI;AAiDV,eAAeA,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}