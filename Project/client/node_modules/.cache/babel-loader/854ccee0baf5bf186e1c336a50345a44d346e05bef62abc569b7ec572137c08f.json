{"ast":null,"code":"import _slicedToArray from\"C:/Users/Devon/Desktop/MERN/OnlyPans/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Pans=function Pans(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),subreddit=_useState2[0],setSubreddit=_useState2[1];useEffect(function(){axios.get(\"https://www.reddit.com/r/castiron/top.json\").then(function(res){console.log(res.data.data.children);setSubreddit(res.data.data.children);}).catch(function(err){return console.log(err);});},[]);return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"text-center onlyHeader\",children:\"Check out these hot pans\"}),/*#__PURE__*/_jsx(\"div\",{className:\"d-flex grid overflow-auto\",children:subreddit.map(function(post,i){return/*#__PURE__*/_jsx(\"div\",{className:\"row\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center m-4 \",children:[/*#__PURE__*/_jsx(\"img\",{className:\"rounded\",src:\"\".concat(post.data.thumbnail),height:\"\".concat(post.data.thumbnail_height),width:\"\".concat(post.data.thumbnail_width),alt:\"cast iron pan ppst\"}),/*#__PURE__*/_jsx(\"p\",{className:\"m-3\",children:post.data.title})]})},i);})})]});};export default Pans;","map":{"version":3,"names":["React","useState","useEffect","axios","Pans","subreddit","setSubreddit","get","then","res","console","log","data","children","catch","err","map","post","i","thumbnail","thumbnail_height","thumbnail_width","title"],"sources":["C:/Users/Devon/Desktop/MERN/OnlyPans/client/src/components/Pans.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nconst Pans = () => {\r\n    const [subreddit, setSubreddit] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://www.reddit.com/r/castiron/top.json`)\r\n            .then((res) => {\r\n                console.log(res.data.data.children)\r\n                setSubreddit(res.data.data.children)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h5 className='text-center onlyHeader'>Check out these hot pans</h5>\r\n            <div className='d-flex grid overflow-auto'>\r\n                {\r\n                    subreddit.map((post, i) => {\r\n                        return (\r\n                            <div className='row' key={i} >\r\n                                <div className='text-center m-4 '>\r\n                                    <img className='rounded' src={`${post.data.thumbnail}`} height={`${post.data.thumbnail_height}`} width={`${post.data.thumbnail_width}`} alt=\"cast iron pan ppst\" />\r\n                                    <p className='m-3'>{post.data.title}</p>\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pans"],"mappings":"iIAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAOC,MAAK,KAAM,OAAO,yFAEzB,GAAMC,KAAI,CAAG,QAAPA,KAAI,EAAS,CACf,cAAkCH,QAAQ,CAAC,EAAE,CAAC,wCAAvCI,SAAS,eAAEC,YAAY,eAE9BJ,SAAS,CAAC,UAAM,CACZC,KAAK,CAACI,GAAG,8CAA8C,CAClDC,IAAI,CAAC,SAACC,GAAG,CAAK,CACXC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CACnCP,YAAY,CAACG,GAAG,CAACG,IAAI,CAACA,IAAI,CAACC,QAAQ,CAAC,CACxC,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,GAAG,QAAKL,QAAO,CAACC,GAAG,CAACI,GAAG,CAAC,GAAC,CACzC,CAAC,CAAE,EAAE,CAAC,CAEN,mBACI,oCACI,WAAI,SAAS,CAAC,wBAAwB,UAAC,0BAAwB,EAAK,cACpE,YAAK,SAAS,CAAC,2BAA2B,UAElCV,SAAS,CAACW,GAAG,CAAC,SAACC,IAAI,CAAEC,CAAC,CAAK,CACvB,mBACI,YAAK,SAAS,CAAC,KAAK,uBAChB,aAAK,SAAS,CAAC,kBAAkB,wBAC7B,YAAK,SAAS,CAAC,SAAS,CAAC,GAAG,WAAKD,IAAI,CAACL,IAAI,CAACO,SAAS,CAAG,CAAC,MAAM,WAAKF,IAAI,CAACL,IAAI,CAACQ,gBAAgB,CAAG,CAAC,KAAK,WAAKH,IAAI,CAACL,IAAI,CAACS,eAAe,CAAG,CAAC,GAAG,CAAC,oBAAoB,EAAG,cACnK,UAAG,SAAS,CAAC,KAAK,UAAEJ,IAAI,CAACL,IAAI,CAACU,KAAK,EAAK,GACtC,EAJgBJ,CAAC,CAMrB,CAEd,CAAC,CAAC,EAEJ,GACJ,CAEd,CAAC,CAED,cAAed,KAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}